# 게임 서비스 카오스 엔지니어링 정책
# 의도적인 장애 주입을 통한 시스템 견고성 검증 및 개선

apiVersion: sre.observaility.com/v1
kind: ChaosEngineeringPolicy
metadata:
  name: game-service-chaos-engineering-policy
  namespace: game-sre
  labels:
    service: game-service
    team: game-sre
    environment: production
spec:
  description: "모바일 게임 서비스 카오스 엔지니어링 정책"

  # 카오스 엔지니어링 목표
  objectives:
    - name: "시스템 견고성 검증"
      description: "예상치 못한 장애 상황에서 시스템의 견고성 검증"
      metrics:
        - "서비스 가용성 유지"
        - "데이터 무결성 보장"
        - "사용자 경험 유지"

    - name: "장애 대응 능력 향상"
      description: "팀의 장애 대응 능력 및 자동 복구 메커니즘 검증"
      metrics:
        - "MTTR (Mean Time To Recovery)"
        - "자동 복구 성공률"
        - "수동 개입 필요성"

    - name: "회복탄력성 개선"
      description: "장애 발생 후 시스템의 회복 능력 및 복원력 향상"
      metrics:
        - "회복 시간"
        - "데이터 손실 방지"
        - "서비스 품질 복원"

    - name: "장애 시나리오 학습"
      description: "다양한 장애 시나리오에 대한 이해 및 대응 방법 학습"
      metrics:
        - "장애 시나리오 커버리지"
        - "팀원 학습 효과"
        - "런북 개선 효과"

  # 카오스 엔지니어링 원칙
  principles:
    - name: "안전성 우선"
      description: "모든 카오스 실험은 안전한 환경에서 수행"
      guidelines:
        - "프로덕션 환경에서는 사전 승인된 실험만 수행"
        - "사용자 영향 최소화를 위한 시간대 및 규모 제한"
        - "즉시 중단 가능한 안전장치 마련"

    - name: "점진적 접근"
      description: "작은 규모부터 시작하여 점진적으로 확대"
      guidelines:
        - "개발 환경 → 스테이징 환경 → 프로덕션 환경 순서"
        - "단일 서비스 → 서비스 그룹 → 전체 시스템 순서"
        - "장애 강도 및 지속시간 점진적 증가"

    - name: "학습 중심"
      description: "장애 발생 자체보다는 학습과 개선에 집중"
      guidelines:
        - "모든 실험 결과 문서화 및 공유"
        - "팀 전체의 학습 기회로 활용"
        - "지속적인 개선 및 최적화"

    - name: "자동화 우선"
      description: "가능한 한 자동화된 카오스 실험 수행"
      guidelines:
        - "정기적인 자동 카오스 실험 스케줄링"
        - "CI/CD 파이프라인에 카오스 테스트 통합"
        - "자동 복구 메커니즘 검증"

  # 카오스 실험 시나리오
  chaosScenarios:
    # 인프라 레벨 장애
    infrastructure:
      - name: "node-failure"
        description: "노드 장애 시나리오"
        target: "kubernetes-node"
        actions:
          - "노드 강제 종료"
          - "노드 네트워크 차단"
          - "노드 리소스 고갈"
        expectedBehavior:
          - "Pod 자동 재배치"
          - "서비스 가용성 유지"
          - "데이터 손실 없음"
        safetyMeasures:
          - "최대 1개 노드만 대상"
          - "사용량 적은 시간대 수행"
          - "즉시 복구 가능한 상태 유지"

      - name: "network-partition"
        description: "네트워크 분할 시나리오"
        target: "network-connectivity"
        actions:
          - "서비스 간 네트워크 차단"
          - "데이터베이스 연결 차단"
          - "외부 API 연결 차단"
        expectedBehavior:
          - "서킷브레이커 동작"
          - "폴백 메커니즘 활성화"
          - "사용자 경험 유지"
        safetyMeasures:
          - "제한된 시간 동안만 수행"
          - "모니터링 강화"
          - "즉시 복구 스크립트 준비"

      - name: "resource-exhaustion"
        description: "리소스 고갈 시나리오"
        target: "system-resources"
        actions:
          - "CPU 사용률 100%로 증가"
          - "메모리 사용률 100%로 증가"
          - "디스크 공간 고갈"
        expectedBehavior:
          - "자동 스케일링 동작"
          - "리소스 제한 정상 동작"
          - "서비스 품질 유지"
        safetyMeasures:
          - "제한된 리소스만 대상"
          - "모니터링 임계값 설정"
          - "자동 복구 트리거"

    # 애플리케이션 레벨 장애
    application:
      - name: "service-failure"
        description: "서비스 장애 시나리오"
        target: "game-services"
        actions:
          - "게임 서버 강제 종료"
          - "매칭 서비스 장애"
          - "데이터 저장 서비스 장애"
        expectedBehavior:
          - "로드밸런서가 장애 서비스 제외"
          - "헬스체크 정상 동작"
          - "사용자 요청 재시도"
        safetyMeasures:
          - "최대 1개 인스턴스만 대상"
          - "사용자 수 적은 시간대 수행"
          - "자동 재시작 확인"

      - name: "database-failure"
        description: "데이터베이스 장애 시나리오"
        target: "game-database"
        actions:
          - "데이터베이스 연결 차단"
          - "데이터베이스 쿼리 지연"
          - "데이터베이스 메모리 고갈"
        expectedBehavior:
          - "연결 풀 정상 동작"
          - "쿼리 타임아웃 정상 동작"
          - "폴백 데이터 사용"
        safetyMeasures:
          - "읽기 전용 복제본만 대상"
          - "데이터 무결성 확인"
          - "백업 복구 계획 준비"

      - name: "cache-failure"
        description: "캐시 장애 시나리오"
        target: "redis-cache"
        actions:
          - "Redis 연결 차단"
          - "Redis 메모리 고갈"
          - "Redis 키 만료"
        expectedBehavior:
          - "데이터베이스 폴백 동작"
          - "캐시 미스 처리"
          - "서비스 성능 유지"
        safetyMeasures:
          - "제한된 캐시만 대상"
          - "데이터 손실 방지"
          - "복구 시간 모니터링"

    # 외부 의존성 장애
    externalDependencies:
      - name: "payment-gateway-failure"
        description: "결제 게이트웨이 장애 시나리오"
        target: "external-payment-api"
        actions:
          - "결제 API 연결 차단"
          - "결제 응답 지연"
          - "결제 오류 증가"
        expectedBehavior:
          - "결제 재시도 메커니즘 동작"
          - "사용자에게 적절한 오류 메시지"
          - "게임 플레이 지속 가능"
        safetyMeasures:
          - "테스트 결제만 대상"
          - "실제 결제 영향 없음"
          - "결제 상태 모니터링"

      - name: "social-login-failure"
        description: "소셜 로그인 장애 시나리오"
        target: "external-auth-api"
        actions:
          - "소셜 로그인 API 차단"
          - "인증 토큰 만료"
          - "사용자 정보 동기화 실패"
        expectedBehavior:
          - "기존 로그인 세션 유지"
          - "게스트 모드 활성화"
          - "사용자 경험 최소화"
        safetyMeasures:
          - "새로운 로그인만 대상"
          - "기존 사용자 영향 없음"
          - "인증 상태 모니터링"

      - name: "cdn-failure"
        description: "CDN 장애 시나리오"
        target: "content-delivery-network"
        actions:
          - "CDN 엣지 서버 장애"
          - "콘텐츠 전송 지연"
          - "이미지/에셋 로딩 실패"
        expectedBehavior:
          - "로컬 폴백 콘텐츠 사용"
          - "이미지 압축 및 최적화"
          - "사용자 경험 유지"
        safetyMeasures:
          - "제한된 지역만 대상"
          - "핵심 콘텐츠 보호"
          - "복구 시간 모니터링"

  # 카오스 실험 실행 정책
  executionPolicy:
    # 실행 환경별 정책
    environmentSpecific:
      - environment: "development"
        policy: "자유로운 실험 허용"
        restrictions:
          - "팀원 사전 통지"
          - "데이터 백업 확인"
          - "복구 계획 수립"

      - environment: "staging"
        policy: "제한된 실험 허용"
        restrictions:
          - "팀 리드 사전 승인"
          - "사용자 영향 최소화"
          - "모니터링 강화"

      - environment: "production"
        policy: "엄격한 제한"
        restrictions:
          - "CTO 사전 승인"
          - "사용자 영향 최소화"
          - "즉시 중단 가능"

    # 시간대별 정책
    timeBasedPolicy:
      - timeWindow: "업무 시간 (09:00-18:00)"
        policy: "제한된 실험만 허용"
        allowedScenarios:
          - "가벼운 네트워크 지연"
          - "제한된 리소스 고갈"
          - "읽기 전용 서비스 장애"

      - timeWindow: "비업무 시간 (18:00-09:00)"
        policy: "광범위한 실험 허용"
        allowedScenarios:
          - "노드 장애"
          - "서비스 장애"
          - "데이터베이스 장애"

    # 규모별 정책
    scaleBasedPolicy:
      - scale: "small"
        description: "단일 인스턴스/서비스 장애"
        approval: "팀원 자체 승인"
        notification: "팀 채널 알림"

      - scale: "medium"
        description: "서비스 그룹/노드 장애"
        approval: "팀 리드 승인"
        notification: "팀 리드 + 운영팀 알림"

      - scale: "large"
        description: "전체 시스템/환경 장애"
        approval: "CTO 승인"
        notification: "전체 팀 + 경영진 알림"

  # 안전장치 및 모니터링
  safetyMeasures:
    # 자동 중단 조건
    autoStopConditions:
      - name: "slo-violation"
        description: "SLO 위반 시 자동 중단"
        conditions:
          - "게임 서버 가용성 < 99%"
          - "게임 매칭 성공률 < 90%"
          - "데이터 저장 성공률 < 99%"
        action: "즉시 실험 중단 및 복구"

      - name: "user-impact"
        description: "사용자 영향 과다 시 자동 중단"
        conditions:
          - "영향 받는 사용자 > 10%"
          - "사용자 불만 증가"
          - "지원 티켓 급증"
        action: "즉시 실험 중단 및 복구"

      - name: "time-limit"
        description: "시간 제한 초과 시 자동 중단"
        conditions:
          - "실험 지속 시간 > 30분"
          - "복구 시간 > 10분"
        action: "자동 실험 종료 및 복구"

    # 모니터링 및 알림
    monitoring:
      - name: "real-time-metrics"
        description: "실시간 메트릭 모니터링"
        metrics:
          - "서비스 가용성"
          - "응답 시간"
          - "오류율"
          - "사용자 활동"
        alerting:
          - "SLO 위반 시 즉시 알림"
          - "사용자 영향 증가 시 알림"
          - "복구 지연 시 알림"

      - name: "user-feedback"
        description: "사용자 피드백 모니터링"
        sources:
          - "앱 내 오류 리포트"
          - "고객 지원 티켓"
          - "소셜 미디어 언급"
          - "사용자 리뷰"
        alerting:
          - "부정적 피드백 증가 시 알림"
          - "지원 요청 급증 시 알림"

  # 카오스 실험 결과 분석
  resultAnalysis:
    # 성공 지표
    successMetrics:
      - name: "system-resilience"
        description: "시스템 회복탄력성"
        indicators:
          - "장애 발생 후 자동 복구 성공"
          - "사용자 경험 유지"
          - "데이터 무결성 보장"

      - name: "team-preparedness"
        description: "팀 준비도"
        indicators:
          - "장애 대응 시간 단축"
          - "수동 개입 감소"
          - "런북 효과성 향상"

      - name: "automation-effectiveness"
        description: "자동화 효과성"
        indicators:
          - "자동 복구 성공률"
          - "복구 시간 단축"
          - "인적 오류 감소"

    # 개선 영역
    improvementAreas:
      - name: "system-architecture"
        description: "시스템 아키텍처 개선"
        focus:
          - "단일 장애점 제거"
          - "장애 격리 강화"
          - "복구 메커니즘 개선"

      - name: "operational-processes"
        description: "운영 프로세스 개선"
        focus:
          - "장애 대응 절차 최적화"
          - "모니터링 및 알림 개선"
          - "팀 협업 방식 개선"

      - name: "automation-tools"
        description: "자동화 도구 개선"
        focus:
          - "자동 복구 로직 강화"
          - "장애 감지 정확도 향상"
          - "복구 시간 단축"

  # 카오스 엔지니어링 도구
  tools:
    # 카오스 엔지니어링 플랫폼
    platform:
      - name: "Litmus Chaos"
        purpose: "Kubernetes 환경 카오스 실험"
        features:
          - "다양한 카오스 실험 템플릿"
          - "자동화된 실험 실행"
          - "결과 분석 및 보고"

      - name: "Chaos Monkey"
        purpose: "Netflix 오픈소스 카오스 도구"
        features:
          - "자동화된 장애 주입"
          - "스케줄링된 실험"
          - "결과 모니터링"

      - name: "Gremlin"
        purpose: "상용 카오스 엔지니어링 플랫폼"
        features:
          - "고급 카오스 시나리오"
          - "팀 협업 기능"
          - "상세한 분석 및 보고"

    # 모니터링 및 분석 도구
    monitoring:
      - name: "Prometheus + Grafana"
        purpose: "실시간 메트릭 모니터링"
        features:
          - "SLO 지표 추적"
          - "장애 영향 측정"
          - "복구 시간 분석"

      - name: "Jaeger"
        purpose: "분산 추적 및 분석"
        features:
          - "서비스 간 호출 추적"
          - "장애 전파 경로 분석"
          - "성능 병목 지점 식별"

      - name: "ELK Stack"
        purpose: "로그 분석 및 모니터링"
        features:
          - "실시간 로그 분석"
          - "장애 패턴 식별"
          - "사용자 영향 분석"

  # 카오스 엔지니어링 교육 및 훈련
  training:
    # 기본 교육
    basicTraining:
      - name: "카오스 엔지니어링 개념"
        duration: "2시간"
        topics:
          - "카오스 엔지니어링 원리"
          - "안전한 실험 수행 방법"
          - "결과 분석 및 개선"

      - name: "도구 사용법"
        duration: "4시간"
        topics:
          - "Litmus Chaos 사용법"
          - "실험 시나리오 작성"
          - "결과 모니터링 및 분석"

    # 고급 훈련
    advancedTraining:
      - name: "복잡한 시나리오 설계"
        duration: "6시간"
        topics:
          - "다중 장애 시나리오"
          - "연쇄 장애 시뮬레이션"
          - "복구 전략 수립"

      - name: "팀 협업 및 의사결정"
        duration: "4시간"
        topics:
          - "장애 상황에서의 의사결정"
          - "팀 간 협업 방법"
          - "커뮤니케이션 전략"

    # 실습 및 시뮬레이션
    handsOnTraining:
      - name: "개발 환경 실습"
        frequency: "월 1회"
        duration: "4시간"
        format: "실제 시스템을 이용한 실습"

      - name: "스테이징 환경 시뮬레이션"
        frequency: "분기 1회"
        duration: "8시간"
        format: "실제 운영 환경과 유사한 시뮬레이션"

      - name: "팀 협업 훈련"
        frequency: "분기 1회"
        duration: "6시간"
        format: "역할극 및 시나리오 기반 훈련"

  # 카오스 엔지니어링 정책 검토 및 개선
  policyReview:
    frequency: "분기별"
    participants:
      - "SRE 팀"
      - "개발 팀 리드"
      - "운영 팀"
      - "보안 팀"
      - "경영진 (연 1회)"

    reviewTopics:
      - "카오스 실험 결과 분석"
      - "안전성 및 위험도 평가"
      - "팀 역량 및 준비도 평가"
      - "도구 및 자동화 개선"
      - "정책 및 절차 개선"

    improvementProcess:
      - "실험 결과 데이터 수집 및 분석"
      - "개선안 도출 및 검토"
      - "정책 수정 및 승인"
      - "팀 교육 및 공지"
      - "개선 효과 측정 및 검증"
